{
  "available_tasks": [
    {
      "TaskId": "T2_precommit_hooks",
      "Summary": "Add pre-commit hooks with Husky",
      "RuntimeMin": 20,
      "Wave": 1,
      "ConflictsWith": [],
      "Files": [
        {
          "pattern": "package.json",
          "type": "exact"
        },
        {
          "pattern": ".husky/.*",
          "type": "regex"
        },
        {
          "pattern": "mcp_server/package.json",
          "type": "exact"
        }
      ],
      "Description": "Install and configure Husky to enforce linting and formatting checks on git commit. Prevent commits that violate code quality standards."
    },
    {
      "TaskId": "T48_audit_resources",
      "Summary": "Comprehensively audit all resources for accuracy",
      "RuntimeMin": 20,
      "Wave": 1,
      "ConflictsWith": [],
      "Files": [
        {
          "pattern": "mcp_server/resources/.*\\.md$",
          "type": "regex"
        }
      ],
      "Description": "Review all resource documentation after changes to ensure accuracy and consistency. Update outdated information."
    },
    {
      "TaskId": "T12_repository_pattern",
      "Summary": "Implement repository pattern for work items",
      "RuntimeMin": 20,
      "Wave": 1,
      "ConflictsWith": [
        "T3_standardize_naming",
        "T50_handler_improvements",
        "T51_final_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/repositories/.*\\.ts$",
          "type": "regex"
        },
        {
          "pattern": "mcp_server/src/services/ado-work-item-service\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Separate data access logic from business logic using repository pattern. Create WorkItemRepository to encapsulate ADO API calls."
    },
    {
      "TaskId": "T8_consolidate_ado_types",
      "Summary": "Consolidate ADO types into barrel exports",
      "RuntimeMin": 20,
      "Wave": 1,
      "ConflictsWith": [
        "T3_standardize_naming",
        "T9d_remove_any_types_types",
        "T51_final_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/types/ado\\.ts$",
          "type": "regex"
        },
        {
          "pattern": "mcp_server/src/types/work-items\\.ts$",
          "type": "regex"
        },
        {
          "pattern": "mcp_server/src/types/index\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Organize types spread across ado.ts, work-items.ts, and service files. Create clear type hierarchy with barrel exports for easier imports."
    },
    {
      "TaskId": "T_CONFIG_schemas",
      "Summary": "Consolidate all schema additions",
      "RuntimeMin": 30,
      "Wave": 1,
      "ConflictsWith": [
        "T3_standardize_naming",
        "T9c_remove_any_types_config",
        "T51_final_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/config/schemas\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Add all new parameter schemas to schemas.ts in a single commit. Includes schemas for: context packages, unified query generator, bulk operations (transition, move iteration), clone work item, link by handles, tool discovery, deterministic query tools, and parameter fixes (backlog staleness, prompt staleness)."
    },
    {
      "TaskId": "T23b_fix_odata_generator_handle",
      "Summary": "Fix OData query generator to return query handle",
      "RuntimeMin": 20,
      "Wave": 1,
      "ConflictsWith": [
        "T3_standardize_naming",
        "T9b_remove_any_types_handlers",
        "T50_handler_improvements",
        "T51_final_cleanup",
        "T31_tool_config_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/services/handlers/query/odata-generator-handler\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Update OData query generator to properly return query handle for generated queries, not just query text."
    },
    {
      "TaskId": "T23a_fix_wiql_generator_handle",
      "Summary": "Fix wit-generate-query to return query handle",
      "RuntimeMin": 20,
      "Wave": 1,
      "ConflictsWith": [
        "T3_standardize_naming",
        "T9b_remove_any_types_handlers",
        "T23c_fix_wiql_remaining_results",
        "T50_handler_improvements",
        "T51_final_cleanup",
        "T31_tool_config_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/services/handlers/query/wiql-generator-handler\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Update WIQL query generator to properly return query handle for generated queries, not just query text."
    },
    {
      "TaskId": "T9a_remove_any_types_services",
      "Summary": "Remove 'any' types from service layer",
      "RuntimeMin": 25,
      "Wave": 1,
      "ConflictsWith": [
        "T3_standardize_naming",
        "T9b_remove_any_types_handlers",
        "T16_context_packages_by_handle",
        "T50_handler_improvements",
        "T51_final_cleanup",
        "T31_tool_config_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/services/[^/]+\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Replace all 'any' type usage with proper interfaces in mcp_server/src/services/*.ts files (excluding handlers subdirectory). Focus on service classes and core service logic. Pay special attention to setServerInstance(server: MCPServer | null | any)."
    },
    {
      "TaskId": "T9d_remove_any_types_types",
      "Summary": "Remove 'any' types from type definitions",
      "RuntimeMin": 15,
      "Wave": 2,
      "ConflictsWith": [
        "T3_standardize_naming",
        "T8_consolidate_ado_types",
        "T51_final_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/types/.*\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Replace all 'any' type usage with proper interfaces in mcp_server/src/types/*.ts files. Focus on type definitions, interfaces, and type utilities."
    },
    {
      "TaskId": "T23c_fix_wiql_remaining_results",
      "Summary": "Fix WIQL query generator to return handle for remaining results",
      "RuntimeMin": 20,
      "Wave": 2,
      "ConflictsWith": [
        "T3_standardize_naming",
        "T9b_remove_any_types_handlers",
        "T23a_fix_wiql_generator_handle",
        "T50_handler_improvements",
        "T51_final_cleanup",
        "T31_tool_config_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/services/handlers/query/wiql-generator-handler\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Ensure WIQL generator returns query handle for paginated results, allowing continuation of large result sets."
    },
    {
      "TaskId": "T17_unified_query_generator",
      "Summary": "Add unified query generator tool",
      "RuntimeMin": 20,
      "Wave": 3,
      "ConflictsWith": [
        "T3_standardize_naming",
        "T9b_remove_any_types_handlers",
        "T50_handler_improvements",
        "T51_final_cleanup",
        "T31_tool_config_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/services/handlers/query/unified-query-generator\\.ts$",
          "type": "regex"
        },
        {
          "pattern": "mcp_server/prompts/system/query-generator\\.md$",
          "type": "regex"
        }
      ],
      "Description": "Implement handler logic only. Create intelligent query generator that supports both OData and WIQL. Uses AI sampling to choose optimal format based on natural language input. Schema and tool-config registration handled separately in T_CONFIG tasks."
    },
    {
      "TaskId": "T18_bulk_transition_state",
      "Summary": "Add wit-bulk-transition-state-by-query-handle tool",
      "RuntimeMin": 20,
      "Wave": 3,
      "ConflictsWith": [
        "T3_standardize_naming",
        "T9b_remove_any_types_handlers",
        "T50_handler_improvements",
        "T51_final_cleanup",
        "T31_tool_config_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/services/handlers/bulk-operations/bulk-transition-handler\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Implement handler logic only. Create tool for common bulk state transitions (close bugs, move tasks to done) using query handle pattern for safety. Schema and tool-config registration handled separately in T_CONFIG tasks."
    },
    {
      "TaskId": "T19_bulk_move_iteration",
      "Summary": "Add wit-bulk-move-to-iteration-by-query-handle tool",
      "RuntimeMin": 20,
      "Wave": 3,
      "ConflictsWith": [
        "T3_standardize_naming",
        "T9b_remove_any_types_handlers",
        "T50_handler_improvements",
        "T51_final_cleanup",
        "T31_tool_config_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/services/handlers/bulk-operations/bulk-move-iteration-handler\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Implement handler logic only. Create tool for sprint rescheduling without JSON Patch complexity. Move multiple work items to new iteration using query handle. Schema and tool-config registration handled separately in T_CONFIG tasks."
    },
    {
      "TaskId": "T21_link_by_handles",
      "Summary": "Add wit-link-work-items-by-query-handles tool",
      "RuntimeMin": 20,
      "Wave": 3,
      "ConflictsWith": [
        "T3_standardize_naming",
        "T9b_remove_any_types_handlers",
        "T50_handler_improvements",
        "T51_final_cleanup",
        "T31_tool_config_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/services/handlers/bulk-operations/bulk-link-handler\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Implement handler logic only. Create tool for bulk relationship creation between query results. Link work items from two query handles efficiently. Schema and tool-config registration handled separately in T_CONFIG tasks."
    },
    {
      "TaskId": "T16_context_packages_by_handle",
      "Summary": "Add wit-get-context-packages-by-query-handle tool",
      "RuntimeMin": 20,
      "Wave": 3,
      "ConflictsWith": [
        "T3_standardize_naming",
        "T9a_remove_any_types_services",
        "T9b_remove_any_types_handlers",
        "T50_handler_improvements",
        "T51_final_cleanup",
        "T31_tool_config_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/services/handlers/context/.*\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Implement handler logic only. Create new tool to get full work item context packages based on a query handle. Enable bulk context retrieval. Schema and tool-config registration handled separately in T_CONFIG tasks."
    },
    {
      "TaskId": "T32_add_category_prefixes",
      "Summary": "Add category prefixes to all tools",
      "RuntimeMin": 20,
      "Wave": 3,
      "ConflictsWith": [
        "T_CONFIG_tool_configs",
        "T3_standardize_naming",
        "T9c_remove_any_types_config",
        "T29_merge_query_handle_tools",
        "T51_final_cleanup",
        "T31_tool_config_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/config/tool-configs\\.ts$",
          "type": "regex"
        },
        {
          "pattern": "docs/.*\\.md$",
          "type": "regex"
        }
      ],
      "Description": "Prefix all tools with categories: wit-query-*, wit-bulk-*, wit-analyze-*, wit-ai-*. Improve tool organization and discoverability. Tool-config registration handled separately in T_CONFIG_tool_configs."
    },
    {
      "TaskId": "T9c_remove_any_types_config",
      "Summary": "Remove 'any' types from config files",
      "RuntimeMin": 15,
      "Wave": 4,
      "ConflictsWith": [
        "T_CONFIG_schemas",
        "T_CONFIG_tool_configs",
        "T3_standardize_naming",
        "T29_merge_query_handle_tools",
        "T32_add_category_prefixes",
        "T51_final_cleanup",
        "T31_tool_config_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/config/.*\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Replace all 'any' type usage with proper interfaces in mcp_server/src/config/*.ts files. Focus on configuration schemas, tool configs, and config-related types."
    },
    {
      "TaskId": "T9b_remove_any_types_handlers",
      "Summary": "Remove 'any' types from handlers",
      "RuntimeMin": 25,
      "Wave": 4,
      "ConflictsWith": [
        "T3_standardize_naming",
        "T9a_remove_any_types_services",
        "T16_context_packages_by_handle",
        "T17_unified_query_generator",
        "T18_bulk_transition_state",
        "T19_bulk_move_iteration",
        "T21_link_by_handles",
        "T23a_fix_wiql_generator_handle",
        "T23b_fix_odata_generator_handle",
        "T23c_fix_wiql_remaining_results",
        "T29_merge_query_handle_tools",
        "T50_handler_improvements",
        "T51_final_cleanup",
        "T31_tool_config_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/services/handlers/.*\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Replace all 'any' type usage with proper interfaces in mcp_server/src/services/handlers/*.ts files. Focus on handler function signatures, request/response types, and handler-specific logic."
    },
    {
      "TaskId": "T29_merge_query_handle_tools",
      "Summary": "Merge query handle inspection tools into single tool",
      "RuntimeMin": 20,
      "Wave": 5,
      "ConflictsWith": [
        "T_CONFIG_tool_configs",
        "T3_standardize_naming",
        "T9b_remove_any_types_handlers",
        "T9c_remove_any_types_config",
        "T32_add_category_prefixes",
        "T50_handler_improvements",
        "T51_final_cleanup",
        "T31_tool_config_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/services/handlers/query/query-handle-info-handler\\.ts$",
          "type": "regex"
        },
        {
          "pattern": "mcp_server/src/config/tool-configs\\.ts$",
          "type": "regex"
        },
        {
          "pattern": "mcp_server/src/services/tool-service\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Combine wit-validate-query-handle, wit-inspect-query-handle, and wit-select-items-from-query-handle into wit-query-handle-info with optional detailed parameter. Tool-config registration handled separately in T_CONFIG_tool_configs."
    },
    {
      "TaskId": "T50_handler_improvements",
      "Summary": "Comprehensive handler refactoring and improvements",
      "RuntimeMin": 90,
      "Wave": 6,
      "ConflictsWith": [
        "T3_standardize_naming",
        "T9a_remove_any_types_services",
        "T9b_remove_any_types_handlers",
        "T12_repository_pattern",
        "T16_context_packages_by_handle",
        "T17_unified_query_generator",
        "T18_bulk_transition_state",
        "T19_bulk_move_iteration",
        "T21_link_by_handles",
        "T23a_fix_wiql_generator_handle",
        "T23b_fix_odata_generator_handle",
        "T23c_fix_wiql_remaining_results",
        "T29_merge_query_handle_tools",
        "T51_final_cleanup",
        "T31_tool_config_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/services/handlers/.*\\.ts$",
          "type": "regex"
        },
        {
          "pattern": "mcp_server/src/services/.*service.*\\.ts$",
          "type": "regex"
        },
        {
          "pattern": "mcp_server/src/utils/response-builder\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Combined handler improvements including: 1) Extract business logic from handlers to dedicated service layer methods for improved testability and reusability. 2) Standardize error response format across all handlers using response-builder, ensure consistent error structures and messages. 3) Optimize JSON output by reducing payload sizes, removing unnecessary metadata, and improving response structure. This comprehensive handler refactoring pass addresses all handler quality issues in a coordinated manner."
    },
    {
      "TaskId": "T31_tool_config_cleanup",
      "Summary": "Comprehensive tool configuration cleanup and standardization",
      "RuntimeMin": 60,
      "Wave": 7,
      "ConflictsWith": [
        "T_CONFIG_tool_configs",
        "T3_standardize_naming",
        "T9a_remove_any_types_services",
        "T9b_remove_any_types_handlers",
        "T9c_remove_any_types_config",
        "T16_context_packages_by_handle",
        "T17_unified_query_generator",
        "T18_bulk_transition_state",
        "T19_bulk_move_iteration",
        "T21_link_by_handles",
        "T23a_fix_wiql_generator_handle",
        "T23b_fix_odata_generator_handle",
        "T23c_fix_wiql_remaining_results",
        "T29_merge_query_handle_tools",
        "T32_add_category_prefixes",
        "T50_handler_improvements",
        "T51_final_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/config/tool-configs\\.ts$",
          "type": "regex"
        },
        {
          "pattern": "mcp_server/src/services/handlers/.*\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Combined tool config improvements including: 1) Standardize tool naming across all tool configs following consistent naming patterns. 2) Remove get-work-item-last-substantive-change tool and all references (deprecated functionality). 3) Rename wit-validate-hierarchy-fast to wit-validate-work-item-hierarchy for clarity. 4) Add category prefixes where missing to improve tool organization. This single comprehensive update avoids multiple conflicts on tool-configs.ts."
    },
    {
      "TaskId": "T3_standardize_naming",
      "Summary": "Standardize naming conventions across codebase",
      "RuntimeMin": 90,
      "Wave": 8,
      "ConflictsWith": [
        "T_CONFIG_schemas",
        "T_CONFIG_tool_configs",
        "T8_consolidate_ado_types",
        "T9a_remove_any_types_services",
        "T9b_remove_any_types_handlers",
        "T9c_remove_any_types_config",
        "T9d_remove_any_types_types",
        "T12_repository_pattern",
        "T16_context_packages_by_handle",
        "T17_unified_query_generator",
        "T18_bulk_transition_state",
        "T19_bulk_move_iteration",
        "T21_link_by_handles",
        "T23a_fix_wiql_generator_handle",
        "T23b_fix_odata_generator_handle",
        "T23c_fix_wiql_remaining_results",
        "T29_merge_query_handle_tools",
        "T32_add_category_prefixes",
        "T50_handler_improvements",
        "T51_final_cleanup",
        "T31_tool_config_cleanup"
      ],
      "Files": [
        {
          "pattern": "mcp_server/src/services/.*\\.ts$",
          "type": "regex"
        },
        {
          "pattern": "mcp_server/src/config/.*\\.ts$",
          "type": "regex"
        },
        {
          "pattern": "mcp_server/src/types/.*\\.ts$",
          "type": "regex"
        }
      ],
      "Description": "Comprehensive naming standardization including: 1) File names - resolve mix of kebab-case and camelCase, prefer kebab-case consistently. 2) Function names - standardize handler function patterns, consistent use of handle* prefix and action verbs. 3) Variable names - fix inconsistent variable naming (camelCase vs PascalCase), apply consistent camelCase for variables and PascalCase for types/classes. This is a single comprehensive pass to avoid repeated refactoring overhead."
    }
  ],
  "progress_percent": 4.0,
  "total_tasks": 25,
  "completed_count": 1,
  "timestamp": "2025-10-07T18:33:02.2185435-07:00",
  "can_run_in_parallel": [
    "T2_precommit_hooks",
    "T48_audit_resources"
  ],
  "conflict_blocked_tasks": [],
  "in_progress_tasks": [],
  "completed_tasks": [
    "T_CONFIG_tool_configs"
  ]
}
