#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üîç Running pre-commit checks..."

# Get list of staged TypeScript files (relative to repo root)
STAGED_TS_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.(ts|tsx)$' | grep '^mcp_server/' || true)

if [ -z "$STAGED_TS_FILES" ]; then
  echo "‚ÑπÔ∏è  No TypeScript files in mcp_server staged, skipping checks"
  exit 0
fi

# Convert paths to be relative to mcp_server directory
MCP_RELATIVE_FILES=$(echo "$STAGED_TS_FILES" | sed 's|^mcp_server/||')

cd mcp_server || exit 1

echo "üìù Checking code formatting for staged files..."
echo "$MCP_RELATIVE_FILES" | tr '\n' '\0' | xargs -0 npx prettier --check
FORMAT_EXIT=$?

echo "üîé Running linter on staged files..."
echo "$MCP_RELATIVE_FILES" | tr '\n' '\0' | xargs -0 npx eslint
LINT_EXIT=$?

# Exit with error if either check failed
if [ $FORMAT_EXIT -ne 0 ] || [ $LINT_EXIT -ne 0 ]; then
  echo ""
  echo "‚ùå Pre-commit checks failed!"
  echo ""
  if [ $FORMAT_EXIT -ne 0 ]; then
    echo "   üí° Formatting issues detected. Fix with:"
    echo "      cd mcp_server && npx prettier --write <file>"
    echo "   Or run 'npm run format' to fix all files."
  fi
  if [ $LINT_EXIT -ne 0 ]; then
    echo "   üí° Linting issues detected. Fix with:"
    echo "      cd mcp_server && npx eslint --fix <file>"
    echo "   Or run 'npm run lint:fix' to fix all files."
  fi
  echo ""
  exit 1
fi

echo "‚úÖ All pre-commit checks passed!"
